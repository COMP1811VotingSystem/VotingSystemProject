import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import datetime
from SQLite import students
from NamesLists import president_names, officer_names, es_faculty_names, sb_faculty_names, as_faculty_names
from NamesLists import eh_faculty_names


class MainWindow:

    def __init__(self, master):
        self.master = master

        # Setting the window up
        self.master.geometry("850x750")
        self.master.configure(background="RoyalBlue4")
        self.master.title("GSU ELECTIONS 2020")
        self.master.resizable(width=False, height=False)

        self.main_label = tk.Label(text="GSU Elections 2020", bg="RoyalBlue4", width="150", height="4", fg="white",
                                   font=("Arial", "55", "bold", "italic"))
        self.main_label.place(relx=0.5, rely=0.40, anchor="center")

        self.vote_button = tk.Button(text="Vote", height="3", width=30, command=self.vote)
        self.vote_button.place(relx=0.10, rely=0.75, anchor="sw")

        self.quit_button = tk.Button(text="Quit", height="3", width=30, command=self.close_window)
        self.quit_button.place(relx=0.65, rely=0.75, anchor="sw")

    def vote(self):
        """
        Functionality for user when they press vote on main page
        """
        # Code below checks that voting is open
        open_date = datetime.date.today()
        start_date = datetime.date(2019, 12, 7)
        end_date = datetime.date(2019, 12, 30)

        if start_date <= open_date <= end_date:
            # todo can we destroy original screen without the new one?
            self.new_window()
        else:
            messagebox.showinfo("Alert Message", "Voting is now closed")
            # Button(main_screen, text="Exit", height="1", width="20", command=main_screen.quit).pack()

    def close_window(self):
        self.master.destroy()

    def new_window(self):
        self.main_label.destroy()
        self.vote_button.destroy()
        self.quit_button.destroy()

        # next window
        self.second_window = SecondWindow(self.master)


class SecondWindow:

    def __init__(self, master):
        self.master = master

        # todo background code goes here but focus on getting everything right first

        # login text
        self.login_label = tk.Label(text="Log in with your University Username and Password", bg="RoyalBlue4",
                                    fg="white", width="48", height="2", font=("Arial", "15", "bold", "italic"))
        self.login_label.place(relx=0.70, rely=0.25, anchor="center")

        # login buttons and functionality
        self.username_verify = tk.StringVar()
        self.password_verify = tk.StringVar()

        # Login buttons and Labels
        self.user_label = tk.Label(text="Username", width="15", height="1", bg="RoyalBlue4",
                                   fg="white", font=("Arial", "10", "bold"))
        self.user_label.place(relx=0.50, rely=0.35, anchor="center")
        self.user_entry = tk.Entry(textvariable=self.username_verify, width="25", borderwidth="3",
                                   relief="sunken")
        self.user_entry.place(relx=0.83, rely=0.35, anchor="e")
        self.password_label = tk.Label(text="Password", width="15", height="1", bg="RoyalBlue4",
                                       fg="white", font=("Arial", "10", "bold"))
        self.password_label.place(relx=0.5, rely=0.40, anchor="center")
        self.password_entry = tk.Entry(textvariable=self.password_verify, width="25", borderwidth="3",
                                       relief="sunken")
        # todo add show = "*" back in above
        self.password_entry.place(relx=0.83, rely=0.39, anchor="e")
        self.login_entry = tk.Button(text="Log In", height="2", width=5, command=self.check_user)
        self.login_entry.place(relx=0.89, rely=0.37, anchor="e")

    def check_user(self):
        self.user_attempt = self.username_verify.get()
        self.pword_attempt = self.password_verify.get()
        self.user_entry.delete(0, "end")
        self.password_entry.delete(0, "end")

        # todo create code here to check if student has registered to vote or not!

        self.number = "true"

        for student in students:
            if student.username == self.user_attempt:
                if student.password == self.pword_attempt:
                    self.new_window()
            else:
                self.number = "false"
                self.test()

    def test(self):
        if self.number == "true":
            pass
            # print("SUCCESS")
        else:
            self.invalid_user()

    def invalid_user(self):
        print("NOT SUCCESSFUL")

    def new_window(self):
        print("SUCCESS")
        self.login_label.destroy()
        self.user_label.destroy()
        self.user_entry.destroy()
        self.password_entry.destroy()
        self.password_label.destroy()
        self.login_entry.destroy()

        # next window
        self.third_window = ThirdWindow(self.master)


class ThirdWindow:

    def __init__(self, master):
        self.master = master

        # todo add a photo above the below label linked with the GSU i.e their logo

        # todo add commands to every button that takes the user to a separate interface depending on the button pressed

        self.choose_label = tk.Label(text="Choose your GSU Officer!", bg="RoyalBlue4", width="100",
                                     height="4", fg="white", font=("Arial", "40", "bold", "italic"))
        self.choose_label.place(relx=0.5, rely=0.50, anchor="center")

        self.president_button = tk.Button(text="GSU President", height="3", width=20, command=self.vote_president)
        self.president_button.place(relx=0.5, rely=0.70, anchor="center")

        self.officer_button = tk.Button(text="GSU Officers", height="3", width=20, command=self.vote_officer)
        self.officer_button.place(relx=0.20, rely=0.70, anchor="center")

        self.faculty_button = tk.Button(text="GSU Faculty Officers", height="3", width=20, command=self.vote_faculty)
        self.faculty_button.place(relx=0.80, rely=0.70, anchor="center")

    def vote_president(self):
        self.choose_label.destroy()
        self.president_button.destroy()
        self.officer_button.destroy()
        self.faculty_button.destroy()

        # Next window class
        self.president_window = PresidentWindow(self.master)

    def vote_officer(self):
        self.choose_label.destroy()
        self.president_button.destroy()
        self.officer_button.destroy()
        self.faculty_button.destroy()

        # Next window class
        self.officer_window = OfficerWindow(self.master)

    def vote_faculty(self):
        self.choose_label.destroy()
        self.president_button.destroy()
        self.officer_button.destroy()
        self.faculty_button.destroy()

        # Next window class
        self.faculty_window = FacultyWindow(self.master)


class PresidentWindow:

    def __init__(self, master):
        self.master = master

        # Main Headers
        self.president_label = tk.Label(text="GSU President!", bg="RoyalBlue4", width="100",
                                        height="4", fg="white", font=("Arial", "40", "bold", "italic"))
        self.president_label.place(relx=0.5, rely=0.10, anchor="center")

        self.president_two_label = tk.Label(text="Please rank each candidate in order of preference",
                                            bg="RoyalBlue4", width="55", height="4", fg="white",
                                            font=("Arial", "15", "bold", "italic"))
        self.president_two_label.place(relx=0.5, rely=0.2, anchor="center")

        # todo add four photos to GUI showing icons off candidates

        # All combo boxes

        self.first_box = ttk.Combobox(values=president_names)
        self.first_box.place(relx=0.15, rely=0.75, anchor="center")
        self.second_box = ttk.Combobox(values=president_names)
        self.second_box.place(relx=0.375, rely=0.75, anchor="center")
        self.third_box = ttk.Combobox(values=president_names)
        self.third_box.place(relx=0.625, rely=0.75, anchor="center")
        self.fourth_box = ttk.Combobox(values=president_names)
        self.fourth_box.place(relx=0.85, rely=0.75, anchor="center")

        # Preference labels
        self.first_label = tk.Label(text="1st Preference", bg="RoyalBlue4", width="12",
                                    height="2", fg="white", font=("Arial", "11", "bold", "italic"))
        self.first_label.place(relx=0.15, rely=0.80, anchor="center")
        self.second_label = tk.Label(text="2nd Preference", bg="RoyalBlue4", width="12",
                                     height="2", fg="white", font=("Arial", "11", "bold", "italic"))
        self.second_label.place(relx=0.375, rely=0.8, anchor="center")
        self.third_label = tk.Label(text="3rd Preference", bg="RoyalBlue4", width="12",
                                    height="2", fg="white", font=("Arial", 11, "bold", "italic"))
        self.third_label.place(relx=0.625, rely=0.8, anchor="center")
        self.fourth_label = tk.Label(text="4th Preference", bg="RoyalBlue4", width="12",
                                     height="2", fg="white", font=("Arial", "11", "bold", "italic"))
        self.fourth_label.place(relx=0.85, rely=0.80, anchor="center")

        # Buttons
        self.back_button = tk.Button(text="Back", height="1", width=10, command=self.go_back)
        self.back_button.place(relx=0.06, rely=0.03, anchor="center")
        self.save_choice = tk.Button(text="Save Choice", height="2", width=15, command=self.save_entry)
        self.save_choice.place(relx=0.5, rely=0.9, anchor="center")

        # todo create functionality for save button here

    def go_back(self):
        self.president_label.destroy()
        self.president_two_label.destroy()
        self.first_box.destroy()
        self.second_box.destroy()
        self.third_box.destroy()
        self.fourth_box.destroy()
        self.first_label.destroy()
        self.second_label.destroy()
        self.third_label.destroy()
        self.fourth_label.destroy()
        self.back_button.destroy()
        self.save_choice.destroy()

        self.third_window = ThirdWindow(self.master)

    def save_entry(self):
        pass


class FacultyWindow:

    def __init__(self, master):
        self.master = master

        # Main Headers
        self.faculty_label = tk.Label(text="GSU Faculty Officers!", bg="RoyalBlue4", width="100",
                                      height="6", fg="white", font=("Arial", "40", "bold", "italic"))
        self.faculty_label.place(relx=0.5, rely=0.10, anchor="center")

        self.faculty_two_label = tk.Label(text="Please rank each candidate in order of preference",
                                          bg="RoyalBlue4", width="55", height="3", fg="white",
                                          font=("Arial", "15", "bold", "italic"))
        self.faculty_two_label.place(relx=0.5, rely=0.2, anchor="center")

        # todo add four photos to GUI showing icons off candidates

        # All combo boxes

        self.first_box = ttk.Combobox(values="Candidate1")
        self.first_box.place(relx=0.15, rely=0.75, anchor="center")
        self.second_box = ttk.Combobox(values="Candidate2")
        self.second_box.place(relx=0.375, rely=0.75, anchor="center")
        self.third_box = ttk.Combobox(values="Candidate3")
        self.third_box.place(relx=0.625, rely=0.75, anchor="center")
        self.fourth_box = ttk.Combobox(values="Candidate4")
        self.fourth_box.place(relx=0.85, rely=0.75, anchor="center")

        # Preference labels
        self.first_label = tk.Label(text="1st Preference", bg="RoyalBlue4", width="12",
                                    height="2", fg="white", font=("Arial", "11", "bold", "italic"))
        self.first_label.place(relx=0.15, rely=0.80, anchor="center")
        self.second_label = tk.Label(text="2nd Preference", bg="RoyalBlue4", width="12",
                                     height="2", fg="white", font=("Arial", "11", "bold", "italic"))
        self.second_label.place(relx=0.375, rely=0.8, anchor="center")
        self.third_label = tk.Label(text="3rd Preference", bg="RoyalBlue4", width="12",
                                    height="2", fg="white", font=("Arial", 11, "bold", "italic"))
        self.third_label.place(relx=0.625, rely=0.8, anchor="center")
        self.fourth_label = tk.Label(text="4th Preference", bg="RoyalBlue4", width="12",
                                     height="2", fg="white", font=("Arial", "11", "bold", "italic"))
        self.fourth_label.place(relx=0.85, rely=0.80, anchor="center")

        # Buttons
        self.back_button = tk.Button(text="Back", height="1", width=10, command=self.go_back)
        self.back_button.place(relx=0.06, rely=0.03, anchor="center")
        self.save_choice = tk.Button(text="Save Choice", height="2", width=15, command=self.save_entry)
        self.save_choice.place(relx=0.5, rely=0.9, anchor="center")

    def go_back(self):
        self.faculty_label.destroy()
        self.faculty_two_label.destroy()
        self.first_box.destroy()
        self.second_box.destroy()
        self.third_box.destroy()
        self.fourth_box.destroy()
        self.first_label.destroy()
        self.second_label.destroy()
        self.third_label.destroy()
        self.fourth_label.destroy()
        self.back_button.destroy()
        self.save_choice.destroy()

        self.third_window = ThirdWindow(self.master)

    def save_entry(self):
        pass


class OfficerWindow:

    def __init__(self, master):
        self.master = master

        # Main Headers
        self.officer_label = tk.Label(text="GSU Officers!", bg="RoyalBlue4", width="100",
                                      height="4", fg="white", font=("Arial", "40", "bold", "italic"))
        self.officer_label.place(relx=0.5, rely=0.10, anchor="center")

        self.officer_two_label = tk.Label(text="Please rank each candidate in order of preference",
                                          bg="RoyalBlue4", width="55", height="4", fg="white",
                                          font=("Arial", "15", "bold", "italic"))
        self.officer_two_label.place(relx=0.5, rely=0.2, anchor="center")

        # todo add four photos to GUI showing icons off candidates

        # All combo boxes

        self.first_box = ttk.Combobox(values=officer_names)
        self.first_box.place(relx=0.15, rely=0.75, anchor="center")
        self.second_box = ttk.Combobox(values=officer_names)
        self.second_box.place(relx=0.375, rely=0.75, anchor="center")
        self.third_box = ttk.Combobox(values=officer_names)
        self.third_box.place(relx=0.625, rely=0.75, anchor="center")
        self.fourth_box = ttk.Combobox(values=officer_names)
        self.fourth_box.place(relx=0.85, rely=0.75, anchor="center")

        # Preference labels
        self.first_label = tk.Label(text="1st Preference", bg="RoyalBlue4", width="12",
                                    height="2", fg="white", font=("Arial", "11", "bold", "italic"))
        self.first_label.place(relx=0.15, rely=0.80, anchor="center")
        self.second_label = tk.Label(text="2nd Preference", bg="RoyalBlue4", width="12",
                                     height="2", fg="white", font=("Arial", "11", "bold", "italic"))
        self.second_label.place(relx=0.375, rely=0.8, anchor="center")
        self.third_label = tk.Label(text="3rd Preference", bg="RoyalBlue4", width="12",
                                    height="2", fg="white", font=("Arial", 11, "bold", "italic"))
        self.third_label.place(relx=0.625, rely=0.8, anchor="center")
        self.fourth_label = tk.Label(text="4th Preference", bg="RoyalBlue4", width="12",
                                     height="2", fg="white", font=("Arial", "11", "bold", "italic"))
        self.fourth_label.place(relx=0.85, rely=0.80, anchor="center")

        # Buttons
        self.back_button = tk.Button(text="Back", height="1", width=10, command=self.go_back)
        self.back_button.place(relx=0.06, rely=0.03, anchor="center")
        self.save_choice = tk.Button(text="Save Choice", height="2", width=15, command=self.save_entry)
        self.save_choice.place(relx=0.5, rely=0.9, anchor="center")

    def go_back(self):
        self.officer_label.destroy()
        self.officer_two_label.destroy()
        self.first_box.destroy()
        self.second_box.destroy()
        self.third_box.destroy()
        self.fourth_box.destroy()
        self.first_label.destroy()
        self.second_label.destroy()
        self.third_label.destroy()
        self.fourth_label.destroy()
        self.back_button.destroy()
        self.save_choice.destroy()
        self.third_window = ThirdWindow(self.master)

    def save_entry(self):
        pass


if __name__ == '__main__':
    root = tk.Tk()
    app = MainWindow(root)
    root.mainloop()
